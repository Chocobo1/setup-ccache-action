name: Testing
on: [pull_request, push]
permissions:
  actions: write

jobs:
  macos:
    name: macOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      #- name: Time packager index update
      #  run: brew update

      - name: Install ccache
        run: |
          brew install ccache

      - name: Setup ccache
        id: setup_ccache
        uses: ./
        with:
          update_packager_index: false
          install_ccache: false
          prepend_symlinks_to_path: false
          restore_cache: false
          store_cache: false
          ccache_options: |
            max_size=200M
            compression=false
            compression_level=3

      - name: Print environment
        run: |
          whoami
          echo ~
          env
          pwd
          df -h
          echo "$PATH"
          which ccache
          which gcc
          ccache --version
          ccache --show-config
          ccache --show-stats
          ls -la "$(brew --prefix ccache)/libexec"
          echo "${{ env.ccache_symlinks_path }}"
          echo "${{ steps.setup_ccache.outputs.cache_hit }}"

      - name: Build test program
        run: |
          #export PATH="$(brew --prefix ccache)/libexec:$PATH"
          g++ ".github/workflows/hello_world.cpp" -o "hello_world"
          ./hello_world


  macos-minimal:
    name: macOS-minimal
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup ccache
        id: setup_ccache
        uses: ./

      - name: Build test program
        run: |
          g++ ".github/workflows/hello_world.cpp" -o "hello_world"
          ./hello_world


  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Time packager index update
        run: sudo apt update

      - name: Setup ccache
        id: setup_ccache
        uses: ./
        with:
          remove_stale_cache: false

      - name: Print environment
        run: |
          whoami
          echo ~
          env
          pwd
          df -h
          echo "$PATH"
          which ccache
          which gcc
          ccache --version
          ccache --show-config
          ccache --show-stats
          ls -la "/usr/lib/ccache"
          echo "${{ env.ccache_symlinks_path }}"
          echo "${{ steps.setup_ccache.outputs.cache_hit }}"

      - name: Build test program
        run: |
          g++ ".github/workflows/hello_world.cpp" -o "hello_world"
          ./hello_world


  ubuntu_cache_dir:
    name: Ubuntu test cache_dir
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup ccache
        id: setup_ccache
        uses: ./
        with:
          ccache_options: |
            cache_dir=${{ github.workspace }}/../.ccache

      - name: Print environment
        run: |
          whoami
          echo ~
          env
          pwd
          df -h
          echo "$PATH"
          which ccache
          which gcc
          ccache --version
          ccache --show-config
          ccache --show-stats
          ls -la "/usr/lib/ccache"
          echo "${{ env.ccache_symlinks_path }}"
          echo "${{ steps.setup_ccache.outputs.cache_hit }}"

      - name: Build test program
        run: |
          g++ ".github/workflows/hello_world.cpp" -o "hello_world"
          ./hello_world


  ubuntu_missing_permissions:
    name: Ubuntu missing permissions
    runs-on: ubuntu-latest
    permissions: {}  # test for missing permission for `remove_stale_cache`

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup ccache
        id: setup_ccache
        uses: ./


  windows_without_env_var:
    name: Windows without env variable
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # run without `windows_compile_environment`
      - name: Setup ccache
        uses: ./


  windows_msvc:
    name: Windows msvc
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup ccache
        uses: ./
        with:
          windows_compile_environment: msvc
          ccache_options: |
            max_size=1G

      - name: Install build tools
        run: |
          choco install ninja

      - name: Print environment
        shell: cmd
        run: |
          ccache --version
          ccache --show-config
          ccache --show-stats
          echo "${{ env.ccache_symlinks_path }}"
          echo "${{ steps.setup_ccache.outputs.cache_hit }}"

      - name: Setup devcmd
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build test program
        run: |
          cmake `
            -B _build `
            -G "Ninja" `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_CXX_COMPILER_LAUNCHER:FILEPATH="${{ env.ccache_symlinks_path }}" `
            .github/workflows
          cmake `
            --build _build
          ./_build/HelloWorld


  windows_msys2:
    name: Windows msys2
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          install: |
            make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-gcc

      - name: Print environment (system)
        run: |
          Get-Content -Path "D:\a\_temp\setup-msys2\msys2.cmd"
          Get-ChildItem env:
          $env:path

      - name: Setup ccache
        uses: ./
        with:
          windows_compile_environment: msys2

      - name: Print environment (system)
        run: |
          (Get-Item .).FullName
          Get-ChildItem env:
          $env:path

      - name: Print environment (msys)
        shell: msys2 {0}
        run: |
          whoami
          echo ~
          env
          pwd
          df -h
          echo "$PATH"
          which ccache
          which gcc
          ccache --version
          ccache --show-config
          ccache --show-stats
          ls -la "$MSYSTEM_PREFIX/lib/ccache/bin"
          echo "${{ env.ccache_symlinks_path }}"
          echo "${{ steps.setup_ccache.outputs.cache_hit }}"
          cat ~/.bash_profile

      - name: Build test program (direct)
        shell: msys2 {0}
        run: |
          g++ ".github/workflows/hello_world.cpp" -o "hello_world"
          ./hello_world

      - name: Build test program (cmake)
        shell: msys2 {0}
        run: |
          cmake \
            -B _build \
            -G "MSYS Makefiles" \
            .github/workflows
          cmake \
            --build _build
          ./_build/HelloWorld
